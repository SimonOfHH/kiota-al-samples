// <auto-generated/>
namespace PetStoreAl.models;

using SimonOfHH.Kiota.Definitions;
using SimonOfHH.Kiota.Utilities;

codeunit 50017 User implements "Kiota IModelClass SOHH"
{
    Access = Internal;

    var
        #pragma warning disable AA0137
        JSONHelper: Codeunit "JSON Helper SOHH";
        #pragma warning restore AA0137
        JsonBody, SubToken: JsonToken;
        DebugCall: Boolean;
    procedure SetBody(NewJsonBody : JsonToken) 
    begin
        SetBody(NewJsonBody, false);
    end;
    procedure SetBody(NewJsonBody : JsonToken; Debug : Boolean) 
    begin
        JsonBody := NewJsonBody;
        if (Debug) then begin
            #pragma warning disable AA0206
            DebugCall := true;
            #pragma warning restore AA0206
            ValidateBody();
        end;
    end;
    local procedure ValidateBody() 
    var
        #pragma warning disable AA0021,AA0202
        email, firstName, lastName, password, phone, username: Text;
        id: BigInteger;
        userStatus: Integer;
        #pragma warning restore AA0021,AA0202
    begin
        email := Email();
        firstName := FirstName();
        id := Id();
        lastName := LastName();
        password := Password();
        phone := Phone();
        username := Username();
        userStatus := UserStatus();
    end;
    procedure Email() : Text
    begin
        if JsonBody.SelectToken('email', SubToken) then
            exit(SubToken.AsValue().AsText());
    end;
    procedure FirstName() : Text
    begin
        if JsonBody.SelectToken('firstName', SubToken) then
            exit(SubToken.AsValue().AsText());
    end;
    procedure Id() : BigInteger
    begin
        if JsonBody.SelectToken('id', SubToken) then
            exit(SubToken.AsValue().AsBigInteger());
    end;
    procedure LastName() : Text
    begin
        if JsonBody.SelectToken('lastName', SubToken) then
            exit(SubToken.AsValue().AsText());
    end;
    procedure Password() : Text
    begin
        if JsonBody.SelectToken('password', SubToken) then
            exit(SubToken.AsValue().AsText());
    end;
    procedure Phone() : Text
    begin
        if JsonBody.SelectToken('phone', SubToken) then
            exit(SubToken.AsValue().AsText());
    end;
    procedure ToJson() : JsonToken
    begin
        exit(JsonBody);
    end;
    #pragma warning disable AA0245
    procedure ToJson(email : Text; firstName : Text; id : BigInteger; lastName : Text; password : Text; phone : Text; username : Text; userStatus : Integer) : JsonToken
    #pragma warning restore AA0245
    var
        TargetJson: JsonObject;
    begin
        JSONHelper.AddToObjectIfNotEmpty(TargetJson, 'email', email);
        JSONHelper.AddToObjectIfNotEmpty(TargetJson, 'firstName', firstName);
        JSONHelper.AddToObjectIfNotEmpty(TargetJson, 'id', id);
        JSONHelper.AddToObjectIfNotEmpty(TargetJson, 'lastName', lastName);
        JSONHelper.AddToObjectIfNotEmpty(TargetJson, 'password', password);
        JSONHelper.AddToObjectIfNotEmpty(TargetJson, 'phone', phone);
        JSONHelper.AddToObjectIfNotEmpty(TargetJson, 'username', username);
        JSONHelper.AddToObjectIfNotEmpty(TargetJson, 'userStatus', userStatus);
        exit(TargetJson.AsToken());
    end;
    procedure Username() : Text
    begin
        if JsonBody.SelectToken('username', SubToken) then
            exit(SubToken.AsValue().AsText());
    end;
    procedure UserStatus() : Integer
    begin
        if JsonBody.SelectToken('userStatus', SubToken) then
            exit(SubToken.AsValue().AsInteger());
    end;
}
