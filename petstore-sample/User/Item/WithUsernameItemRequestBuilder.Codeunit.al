// <auto-generated/>
namespace PetStoreAl.user.item;

using PetStoreAl.Models;
using SimonOfHH.Kiota.Client;

/// <summary>
/// Builds and executes requests for operations under \user\{username}
/// </summary>
codeunit 50013 WithUsernameItemRequestBuilder 
{

    var
        Identifier: Text;
        ReqConfig: Codeunit "Kiota ClientConfig SOHH";
    procedure SetConfiguration(NewReqConfig : Codeunit "Kiota ClientConfig SOHH") 
    begin
        ReqConfig := NewReqConfig;
        ReqConfig.AppendBaseURL('/');
    end;
    procedure SetIdentifier(Username : Text) 
    begin
        Identifier := Username;
        ReqConfig.AppendBaseURL(Format(Identifier));
    end;
    procedure Delete() : byte
    var
        RequestHandler: Codeunit "Kiota RequestHandler SoHH";
    begin
        RequestHandler.SetClientConfig(ReqConfig);
        RequestHandler.SetMethod(enum::System.RestClient."Http Method"::DELETE);
        RequestHandler.HandleRequest();
    end;
    procedure Get() Target: Codeunit "User"
    var
        RequestHandler: Codeunit "Kiota RequestHandler SoHH";
    begin
        RequestHandler.SetClientConfig(ReqConfig);
        RequestHandler.SetMethod(enum::System.RestClient."Http Method"::GET);
        RequestHandler.HandleRequest();
        if ReqConfig.Client().Response().GetIsSuccessStatusCode() then
            Target.SetBody(ReqConfig.Client().Response().GetContent().AsJson().AsObject());
    end;
    procedure Put(body : Codeunit "User") : byte
    var
        RequestHandler: Codeunit "Kiota RequestHandler SoHH";
    begin
        RequestHandler.SetClientConfig(ReqConfig);
        RequestHandler.SetBody(body);
        RequestHandler.SetMethod(enum::System.RestClient."Http Method"::PUT);
        RequestHandler.HandleRequest();
    end;
}
